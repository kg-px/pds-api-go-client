/*
PDS API

Portworx Data Services API Server

API version: 3.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// ControllersDeploymentTargetMetadataRequest struct for ControllersDeploymentTargetMetadataRequest
type ControllersDeploymentTargetMetadataRequest struct {
	ClusterId *string `json:"cluster_id,omitempty"`
	PdsChartVersion *string `json:"pds_chart_version,omitempty"`
}

// NewControllersDeploymentTargetMetadataRequest instantiates a new ControllersDeploymentTargetMetadataRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControllersDeploymentTargetMetadataRequest() *ControllersDeploymentTargetMetadataRequest {
	this := ControllersDeploymentTargetMetadataRequest{}
	return &this
}

// NewControllersDeploymentTargetMetadataRequestWithDefaults instantiates a new ControllersDeploymentTargetMetadataRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControllersDeploymentTargetMetadataRequestWithDefaults() *ControllersDeploymentTargetMetadataRequest {
	this := ControllersDeploymentTargetMetadataRequest{}
	return &this
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *ControllersDeploymentTargetMetadataRequest) GetClusterId() string {
	if o == nil || o.ClusterId == nil {
		var ret string
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersDeploymentTargetMetadataRequest) GetClusterIdOk() (*string, bool) {
	if o == nil || o.ClusterId == nil {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *ControllersDeploymentTargetMetadataRequest) HasClusterId() bool {
	if o != nil && o.ClusterId != nil {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given string and assigns it to the ClusterId field.
func (o *ControllersDeploymentTargetMetadataRequest) SetClusterId(v string) {
	o.ClusterId = &v
}

// GetPdsChartVersion returns the PdsChartVersion field value if set, zero value otherwise.
func (o *ControllersDeploymentTargetMetadataRequest) GetPdsChartVersion() string {
	if o == nil || o.PdsChartVersion == nil {
		var ret string
		return ret
	}
	return *o.PdsChartVersion
}

// GetPdsChartVersionOk returns a tuple with the PdsChartVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersDeploymentTargetMetadataRequest) GetPdsChartVersionOk() (*string, bool) {
	if o == nil || o.PdsChartVersion == nil {
		return nil, false
	}
	return o.PdsChartVersion, true
}

// HasPdsChartVersion returns a boolean if a field has been set.
func (o *ControllersDeploymentTargetMetadataRequest) HasPdsChartVersion() bool {
	if o != nil && o.PdsChartVersion != nil {
		return true
	}

	return false
}

// SetPdsChartVersion gets a reference to the given string and assigns it to the PdsChartVersion field.
func (o *ControllersDeploymentTargetMetadataRequest) SetPdsChartVersion(v string) {
	o.PdsChartVersion = &v
}

func (o ControllersDeploymentTargetMetadataRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterId != nil {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if o.PdsChartVersion != nil {
		toSerialize["pds_chart_version"] = o.PdsChartVersion
	}
	return json.Marshal(toSerialize)
}

type NullableControllersDeploymentTargetMetadataRequest struct {
	value *ControllersDeploymentTargetMetadataRequest
	isSet bool
}

func (v NullableControllersDeploymentTargetMetadataRequest) Get() *ControllersDeploymentTargetMetadataRequest {
	return v.value
}

func (v *NullableControllersDeploymentTargetMetadataRequest) Set(val *ControllersDeploymentTargetMetadataRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableControllersDeploymentTargetMetadataRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableControllersDeploymentTargetMetadataRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControllersDeploymentTargetMetadataRequest(val *ControllersDeploymentTargetMetadataRequest) *NullableControllersDeploymentTargetMetadataRequest {
	return &NullableControllersDeploymentTargetMetadataRequest{value: val, isSet: true}
}

func (v NullableControllersDeploymentTargetMetadataRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControllersDeploymentTargetMetadataRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


