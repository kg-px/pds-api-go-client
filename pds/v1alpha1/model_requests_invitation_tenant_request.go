/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// RequestsInvitationTenantRequest struct for RequestsInvitationTenantRequest
type RequestsInvitationTenantRequest struct {
	Email *string `json:"email,omitempty"`
	RoleName *string `json:"role_name,omitempty"`
}

// NewRequestsInvitationTenantRequest instantiates a new RequestsInvitationTenantRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestsInvitationTenantRequest() *RequestsInvitationTenantRequest {
	this := RequestsInvitationTenantRequest{}
	return &this
}

// NewRequestsInvitationTenantRequestWithDefaults instantiates a new RequestsInvitationTenantRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestsInvitationTenantRequestWithDefaults() *RequestsInvitationTenantRequest {
	this := RequestsInvitationTenantRequest{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *RequestsInvitationTenantRequest) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestsInvitationTenantRequest) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *RequestsInvitationTenantRequest) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *RequestsInvitationTenantRequest) SetEmail(v string) {
	o.Email = &v
}

// GetRoleName returns the RoleName field value if set, zero value otherwise.
func (o *RequestsInvitationTenantRequest) GetRoleName() string {
	if o == nil || o.RoleName == nil {
		var ret string
		return ret
	}
	return *o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestsInvitationTenantRequest) GetRoleNameOk() (*string, bool) {
	if o == nil || o.RoleName == nil {
		return nil, false
	}
	return o.RoleName, true
}

// HasRoleName returns a boolean if a field has been set.
func (o *RequestsInvitationTenantRequest) HasRoleName() bool {
	if o != nil && o.RoleName != nil {
		return true
	}

	return false
}

// SetRoleName gets a reference to the given string and assigns it to the RoleName field.
func (o *RequestsInvitationTenantRequest) SetRoleName(v string) {
	o.RoleName = &v
}

func (o RequestsInvitationTenantRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.RoleName != nil {
		toSerialize["role_name"] = o.RoleName
	}
	return json.Marshal(toSerialize)
}

type NullableRequestsInvitationTenantRequest struct {
	value *RequestsInvitationTenantRequest
	isSet bool
}

func (v NullableRequestsInvitationTenantRequest) Get() *RequestsInvitationTenantRequest {
	return v.value
}

func (v *NullableRequestsInvitationTenantRequest) Set(val *RequestsInvitationTenantRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestsInvitationTenantRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestsInvitationTenantRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestsInvitationTenantRequest(val *RequestsInvitationTenantRequest) *NullableRequestsInvitationTenantRequest {
	return &NullableRequestsInvitationTenantRequest{value: val, isSet: true}
}

func (v NullableRequestsInvitationTenantRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestsInvitationTenantRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


