/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// ControllersDeleteAccountRoleBindingRequest struct for ControllersDeleteAccountRoleBindingRequest
type ControllersDeleteAccountRoleBindingRequest struct {
	ActorId *string `json:"actor_id,omitempty"`
	ActorType *string `json:"actor_type,omitempty"`
}

// NewControllersDeleteAccountRoleBindingRequest instantiates a new ControllersDeleteAccountRoleBindingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControllersDeleteAccountRoleBindingRequest() *ControllersDeleteAccountRoleBindingRequest {
	this := ControllersDeleteAccountRoleBindingRequest{}
	return &this
}

// NewControllersDeleteAccountRoleBindingRequestWithDefaults instantiates a new ControllersDeleteAccountRoleBindingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControllersDeleteAccountRoleBindingRequestWithDefaults() *ControllersDeleteAccountRoleBindingRequest {
	this := ControllersDeleteAccountRoleBindingRequest{}
	return &this
}

// GetActorId returns the ActorId field value if set, zero value otherwise.
func (o *ControllersDeleteAccountRoleBindingRequest) GetActorId() string {
	if o == nil || o.ActorId == nil {
		var ret string
		return ret
	}
	return *o.ActorId
}

// GetActorIdOk returns a tuple with the ActorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersDeleteAccountRoleBindingRequest) GetActorIdOk() (*string, bool) {
	if o == nil || o.ActorId == nil {
		return nil, false
	}
	return o.ActorId, true
}

// HasActorId returns a boolean if a field has been set.
func (o *ControllersDeleteAccountRoleBindingRequest) HasActorId() bool {
	if o != nil && o.ActorId != nil {
		return true
	}

	return false
}

// SetActorId gets a reference to the given string and assigns it to the ActorId field.
func (o *ControllersDeleteAccountRoleBindingRequest) SetActorId(v string) {
	o.ActorId = &v
}

// GetActorType returns the ActorType field value if set, zero value otherwise.
func (o *ControllersDeleteAccountRoleBindingRequest) GetActorType() string {
	if o == nil || o.ActorType == nil {
		var ret string
		return ret
	}
	return *o.ActorType
}

// GetActorTypeOk returns a tuple with the ActorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersDeleteAccountRoleBindingRequest) GetActorTypeOk() (*string, bool) {
	if o == nil || o.ActorType == nil {
		return nil, false
	}
	return o.ActorType, true
}

// HasActorType returns a boolean if a field has been set.
func (o *ControllersDeleteAccountRoleBindingRequest) HasActorType() bool {
	if o != nil && o.ActorType != nil {
		return true
	}

	return false
}

// SetActorType gets a reference to the given string and assigns it to the ActorType field.
func (o *ControllersDeleteAccountRoleBindingRequest) SetActorType(v string) {
	o.ActorType = &v
}

func (o ControllersDeleteAccountRoleBindingRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActorId != nil {
		toSerialize["actor_id"] = o.ActorId
	}
	if o.ActorType != nil {
		toSerialize["actor_type"] = o.ActorType
	}
	return json.Marshal(toSerialize)
}

type NullableControllersDeleteAccountRoleBindingRequest struct {
	value *ControllersDeleteAccountRoleBindingRequest
	isSet bool
}

func (v NullableControllersDeleteAccountRoleBindingRequest) Get() *ControllersDeleteAccountRoleBindingRequest {
	return v.value
}

func (v *NullableControllersDeleteAccountRoleBindingRequest) Set(val *ControllersDeleteAccountRoleBindingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableControllersDeleteAccountRoleBindingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableControllersDeleteAccountRoleBindingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControllersDeleteAccountRoleBindingRequest(val *ControllersDeleteAccountRoleBindingRequest) *NullableControllersDeleteAccountRoleBindingRequest {
	return &NullableControllersDeleteAccountRoleBindingRequest{value: val, isSet: true}
}

func (v NullableControllersDeleteAccountRoleBindingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControllersDeleteAccountRoleBindingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


