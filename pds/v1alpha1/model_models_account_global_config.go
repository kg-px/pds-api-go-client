/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// ModelsAccountGlobalConfig struct for ModelsAccountGlobalConfig
type ModelsAccountGlobalConfig struct {
	// Specify what data service versions are available for deployment for this account.
	VersionAvailability *string `json:"version_availability,omitempty"`
}

// NewModelsAccountGlobalConfig instantiates a new ModelsAccountGlobalConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsAccountGlobalConfig() *ModelsAccountGlobalConfig {
	this := ModelsAccountGlobalConfig{}
	return &this
}

// NewModelsAccountGlobalConfigWithDefaults instantiates a new ModelsAccountGlobalConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsAccountGlobalConfigWithDefaults() *ModelsAccountGlobalConfig {
	this := ModelsAccountGlobalConfig{}
	return &this
}

// GetVersionAvailability returns the VersionAvailability field value if set, zero value otherwise.
func (o *ModelsAccountGlobalConfig) GetVersionAvailability() string {
	if o == nil || o.VersionAvailability == nil {
		var ret string
		return ret
	}
	return *o.VersionAvailability
}

// GetVersionAvailabilityOk returns a tuple with the VersionAvailability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAccountGlobalConfig) GetVersionAvailabilityOk() (*string, bool) {
	if o == nil || o.VersionAvailability == nil {
		return nil, false
	}
	return o.VersionAvailability, true
}

// HasVersionAvailability returns a boolean if a field has been set.
func (o *ModelsAccountGlobalConfig) HasVersionAvailability() bool {
	if o != nil && o.VersionAvailability != nil {
		return true
	}

	return false
}

// SetVersionAvailability gets a reference to the given string and assigns it to the VersionAvailability field.
func (o *ModelsAccountGlobalConfig) SetVersionAvailability(v string) {
	o.VersionAvailability = &v
}

func (o ModelsAccountGlobalConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VersionAvailability != nil {
		toSerialize["version_availability"] = o.VersionAvailability
	}
	return json.Marshal(toSerialize)
}

type NullableModelsAccountGlobalConfig struct {
	value *ModelsAccountGlobalConfig
	isSet bool
}

func (v NullableModelsAccountGlobalConfig) Get() *ModelsAccountGlobalConfig {
	return v.value
}

func (v *NullableModelsAccountGlobalConfig) Set(val *ModelsAccountGlobalConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsAccountGlobalConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsAccountGlobalConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsAccountGlobalConfig(val *ModelsAccountGlobalConfig) *NullableModelsAccountGlobalConfig {
	return &NullableModelsAccountGlobalConfig{value: val, isSet: true}
}

func (v NullableModelsAccountGlobalConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsAccountGlobalConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


